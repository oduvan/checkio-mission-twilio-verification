# Your Account Sid, Auth Token, Service Id from twilio.com/console
ACCOUNT_SID = 'your_acount_sid'
AUTH_TOKEN = 'your_auth_token'
SERVICE_ID = 'your_service_id'


def send_token(to, channel):
    """
        sends token to user
    """
    # your code here
    return None

def check_token(to, code):
    """
        checks token from user
    """
    # your code here
    return None


if __name__ == '__main__':
    print("Example:")
    print(sum_two(3, 2))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert sum_two(3, 2) == 5, "First"
    assert sum_two(5, 7) == 12, "Second"
    print("Coding complete? Click 'Check' to earn cool rewards!")


# Your Account Sid and Auth Token from twilio.com/console
ACCOUNT_SID = 'your_acount_sid'
AUTH_TOKEN = 'your_auth_token'


def send_message(from, to, body):
    """
        sends message
    """
    # your code here
    return None

if __name__ == '__main__':
    #print("Example:")
    #print(twilio_verify(3, 2))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert send_token('+15017122661', 'sms') == 'pending', "First"
    #assert twilio_verify(5, 7) == 12, "Second"
    print("Coding complete? Click 'Check' to earn cool rewards!")


from twilio.rest import Client

# Your Account Sid and Auth Token from twilio.com/console
#account_sid = 'ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
#auth_token = 'your_auth_token'
#SERVICE_ID = 'your_service_id'

account_sid = 'AC9580cb279920229f9e2e010ec0e5e6ba'
auth_token = 'dad1727268d3a5f91ef4df7242fc4ef5'
SERVICE_ID = 'VA69621e6faffb8b5f06e5ef12b79e9c6d'


client = Client(account_sid, auth_token)
#service = client.verify.services.create(friendly_name='CheckiO Service')
# hint how to create service_id
#service2= client.verify.services.get(SERVICE_SID)
#print(service2)
service = client.verify.services.get(SERVICE_ID).fetch()
print(service)
print(service.sid)


def send_token(to, channel):
    """
        sums two passed arguments
    """
    channel = 'sms'
    verification = client.verify \
                     .services(SERVICE_ID) \
                     .verifications \
                     .create(to=to, channel=channel)
    return verification.status

def check_token(to, code):
    """
        sums two passed arguments
    """
    verification_check = client.verify \
                            .services(SERVICE_ID) \
                            .verification_checks \
                            .create(to=to, code=code)
    return verification_check.status
    #return 'approved'

#if __name__ == '__main__':
    #print("Example:")
    #print(twilio_verify(3, 2))

    # These "asserts" are used for self-checking and not for an auto-testing
    # assert send_token('+15017122661', 'sms') == 'pending', "First"
    #assert twilio_verify(5, 7) == 12, "Second"
    #print("Coding complete? Click 'Check' to earn cool rewards!")
